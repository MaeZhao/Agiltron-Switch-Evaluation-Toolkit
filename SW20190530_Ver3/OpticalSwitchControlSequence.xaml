<Window x:Class="SW20190530_Ver3.OpticalSwitchControlSequence"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:networkUi="clr-namespace:ITCC.NetworkView.NetworkUI;assembly=ITCC.NetworkView.NetworkUI"
        xmlns:networkModel="clr-namespace:ITCC.NetworkView.AdvancedSample.NetworkModel;assembly=ITCC.NetworkView.AdvancedSample.NetworkModel"
        xmlns:SimpleSample="clr-namespace:ITCC.NetworkView.SimpleSample;assembly=ITCC.NetworkView.SimpleSample"
        xmlns:thisNetwork="clr-namespace:SW20190530_Ver3"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        Icon="Images+Icons\agiltronLogo.ico"
        Name ="win"
        Title="Optical Switch Control Sequence" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" StateChanged="Win_StateChanged">

    <Window.Resources>
        <!--Style for GridSplitter-->
        <Style x:Key="GridSplitterVerticalGripStyle" TargetType="{x:Type GridSplitter}">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Cursor" Value="SizeWE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="Transparent">
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}">
                            <Border Height="50" Width="4" VerticalAlignment="Center"
                                    HorizontalAlignment="Center" BorderThickness="1 0"
                                    Background="Transparent"  BorderBrush="#B9B9B9">
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalGridSplitter" TargetType="{x:Type GridSplitter}"
                BasedOn="{StaticResource GridSplitterVerticalGripStyle}">
            <Setter Property="Width" Value="6" />
            <Setter Property="Margin" Value="15 0" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <!--Directories/Styles for SwitchDyagram-->
        <ResourceDictionary x:Key="switchDiagram">
            <ResourceDictionary.MergedDictionaries>
                <!-- 
                Merge in the resource dictionary that is shared between the main window and the overview window.
                -->
                <ResourceDictionary 
                    Source="SharedVisualTemplates.xaml"
                    />
            </ResourceDictionary.MergedDictionaries>

            <!-- UI commands. -->

            <RoutedUICommand x:Key="Commands.DeleteSelectedNodes" />
            <RoutedUICommand x:Key="Commands.CreateNode" />

            <!-- 
        Data-template for ConectionViewModel.
        
        Note that the 'Start' and 'End' of the arrow are bound to 'SourceConnectorHotspot' and 'DestConnectorHotspot' in 
        the view-model.

        In this sample a straight arrow represents connections between nodes.
        -->
            <DataTemplate
            DataType="{x:Type networkModel:ConnectionViewModel}"
            >

                <!-- The connection is represented by a simple arrow. -->
                <SimpleSample:Arrow
                Stroke="Black"
                StrokeThickness="2"
                Fill="Black"
                Start="{Binding SourceConnectorHotspot}"
                End="{Binding DestConnectorHotspot}"
                IsHitTestVisible="False"
                />

                <!-- If you want someting even simpler, try this Line! 
            <Line
                Stroke="Black"
                X1="{Binding SourceConnectorHotspot.X}"
                Y1="{Binding SourceConnectorHotspot.Y}"
                X2="{Binding DestConnectorHotspot.X}"
                Y2="{Binding DestConnectorHotspot.Y}"
                />
            -->

            </DataTemplate>

            <!--
        Define the visual style for a 'NodeItem'.
        
        Binds 'X' and 'Y' in the view-model (the 'NodeViewModel' class)
        to 'X' and 'Y' in the NodeItem class.
        
        This sets the position of the node within the Canvas.
        -->
            <Style TargetType="{x:Type networkUi:NodeItem}">
                <Setter
                Property="X"
                Value="{Binding X}"
                />
                <Setter
                Property="Y"
                Value="{Binding Y}"
                />
                <Setter
                Property="IsSelected"
                Value="{Binding IsSelected}"
                />
            </Style>

            <!-- 
        Define the visual style for a 'ConnectorItem'.
        -->
            <Style 
            TargetType="{x:Type networkUi:ConnectorItem}"
            >
                <!-- 
            Data-binding for the connector hotspot.
            ConnectorItem automatically computes its center 
            points and assigns this value to the 'Hotspot' property.  
            This data-binding in this style then 'pushes' the value into the 
            application view-model.
            -->
                <Setter 
                Property="Hotspot"
                Value="{Binding Hotspot, Mode=OneWayToSource}"
                />

                <!-- The visual template. -->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                        TargetType="{x:Type networkUi:ConnectorItem}"
                        >
                            <Rectangle
                            Stroke="Black"
                            Fill="White"                            
                            Cursor="Hand"
                            Width="12"
                            Height="12"
                            RadiusX="1"
                            RadiusY="1"
                            />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 
        Define a data-template for the 'NodeViewModel' class.
        This generates the UI for each node.
        -->
            <DataTemplate
            DataType="{x:Type networkModel:NodeViewModel}"
            >
                <Grid
                Width="120"
                Height="60"
                >

                    <!-- This rectangle is the main visual for the node. -->
                    <Rectangle
                    Stroke="Black"
                    Fill="White"
                    RadiusX="4"
                    RadiusY="4"
                    />

                    <!-- 
                This grid contains the node's name and connectors.
                The margin is negative so that the connectors overlap the body of the node and it's selection border.
                -->
                    <Grid
                    Margin="-8"
                    >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" MinWidth="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- The name of the node. -->
                        <TextBlock
                        Grid.Column="1"
                        Grid.Row="1"
                        Text="{Binding Name}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        />

                        <!-- 
                    Define the node's four connectors, one on each edge of the node.
                    -->

                        <networkUi:ConnectorItem 
                        Grid.Row="0"
                        Grid.Column="1"
                        DataContext="{Binding Connectors[0]}"
                        />


                        <networkUi:ConnectorItem 
                        Grid.Row="1"
                        Grid.Column="2"
                        DataContext="{Binding Connectors[1]}"
                        />

                        <networkUi:ConnectorItem 
                        Grid.Row="2"
                        Grid.Column="1"
                        DataContext="{Binding Connectors[2]}"
                        />

                        <networkUi:ConnectorItem 
                        Grid.Row="1"
                        Grid.Column="0"
                        DataContext="{Binding Connectors[3]}"
                        />
                    </Grid>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <thisNetwork:ViewModel>
        </thisNetwork:ViewModel>
    </Window.DataContext>

    <!--Backgroud Fade-->
    <Window.Background>
        <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
            <GradientStop Color="#345CA0" Offset="0.1"/>
            <GradientStop Color="#050767" Offset="0.5"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid  Name="Main" Margin="10,0,10,10" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <!--Window bar-->
            <RowDefinition Height="Auto"/>
            <!--Switch Data Table-->
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <!--Buttons-->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Custom Window bar-->
        <Grid  Background="Transparent" Grid.ColumnSpan="3" Grid.Row="0" MouseLeftButtonDown="Window_MouseDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>

            </Grid.ColumnDefinitions>
            <!--Logo-->
            <Image Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="194" Margin="10,0,0,0">
                <Image.Source>
                    <BitmapImage UriSource="Images+Icons\AgiltronBanner.png" />
                </Image.Source>
            </Image>
            <!--Dock Panel Menu-->
            <DockPanel Grid.Row="0" Margin="0,10,0,0">
                <Menu DockPanel.Dock="Top" Background="Transparent">
                    <MenuItem Header="_File" Foreground="White">
                        <MenuItem Header="_New"/>
                        <MenuItem Header="_Open" Click="File_Open_Click"/>
                        <MenuItem Header="_Save" />
                        <MenuItem Header="_Save As" />
                    </MenuItem>
                    <MenuItem Header="_Edit" Foreground="White">
                        <MenuItem Header="_Add Step"/>
                        <MenuItem Header="_Delete Step" />
                    </MenuItem>
                    <MenuItem Header="_Configure" Foreground="White">
                        <MenuItem Header="_Truth Table" />
                    </MenuItem>
                    <MenuItem Header="_Info" Foreground="White">
                        <MenuItem Header="_About" />
                    </MenuItem>
                </Menu>
            </DockPanel>

            <Grid Grid.Column="2" Grid.RowSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--Minimise, Exit, Expand Buttons-->
                <Grid Grid.Row="0" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition  Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Name="ExitButton" Background="#345CA0" Grid.Column="2" VerticalAlignment="Top"
                                HorizontalAlignment="Right" Click="Button_Click_Exit" >
                        <Image Source="Images+Icons\IconExit.png" Height="15"/>
                    </Button>
                    <Button Name="MinButton" Background="#345CA0" Grid.Column="1" VerticalAlignment="Top"
                                        HorizontalAlignment="Right" Click="Button_Min_Exit">
                        <Image Source="Images+Icons\IconMin.png" Height="15"/>
                    </Button>
                </Grid>
                <!--Page Title-->
                <TextBlock Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" FontSize="15"
                           VerticalAlignment="Top" Foreground="White" Margin="0,0,10,5">
                    Switch Evaluation Tookit</TextBlock>
                <TextBlock Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right" FontSize="12"
                           VerticalAlignment="Top" Foreground="White" Margin="0,0,10,5">
                    Optical Switch Control Sequence</TextBlock>
            </Grid>
        </Grid>
        <!--Bottom Buttons-->
        <Grid Grid.Row="3" VerticalAlignment="Center"  Margin="15" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions >
                <ColumnDefinition />
                <ColumnDefinition Width= "Auto" />
                <ColumnDefinition Width= "Auto"/>
                <ColumnDefinition Width= "Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Margin="20,0" Grid.Column="1" HorizontalAlignment="Right" FontSize="17" Width="80" Click="Button_Click_Run">Run</Button>
            <StatusBar Foreground="White" BorderThickness="0" Background="Transparent" Margin="20,0" Grid.Column="2" HorizontalAlignment="Right" FontSize="14" >Progress:
                <ProgressBar Name ="progressBar"  Width="100" Height="15" Background="#050767" ValueChanged="ProgressBar_ValueChanged"  />
            </StatusBar>
            <Button Margin="20,0" Grid.Column="3" HorizontalAlignment="Left" FontSize="16" Width="85" Click="Button_Click_Pause">Pause/Go</Button>
            <Button Margin="20,0" Grid.Column="4" HorizontalAlignment="Left" FontSize="15" Width="50" Height="30" Click="Button_Click_Stop">Stop</Button>
        </Grid>
        <!--Control table half-->
        <Grid Name="gridSide" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="Transparent" Grid.Row="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="15" Foreground="White" 
                       Text="Switch Control Table" Margin="10,15,0,10"/>
            <!--Scroll Viewer-->
            <ScrollViewer Name="scroller" Grid.Row="1" VerticalContentAlignment="Stretch" 
                          MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}" 
                          VerticalScrollBarVisibility="Auto">
                <Grid Name="switchGrid" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="White" Margin="10,0,0,10"/>
            </ScrollViewer>
        </Grid>
        <!--Center gridsplitter-->
        <GridSplitter Grid.Row ="2" VerticalAlignment="Stretch" HorizontalAlignment="Left" Grid.Column="1"
                      Width="11" Margin="0" Style="{StaticResource VerticalGridSplitter}" Padding="11">
            <GridSplitter.Background>
                <LinearGradientBrush x:Name="GradStyle" EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                    <GradientStop Color="#00050554" Offset="0.1"/>
                    <GradientStop Color= "#050767" Offset="0.2"/>
                    <GradientStop Color="#D3345CA0" Offset="0.4"/>
                    <GradientStop Color="#00345CA0" Offset="0.58"/>
                </LinearGradientBrush>
            </GridSplitter.Background>
        </GridSplitter>
        <!--Chart table half-->
        <Grid Name="chartSide" Grid.Row="2" Grid.Column="2"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="15" Foreground="White" 
                       Text="Switch Control Diagram" Margin="10,15,0,10"/>

            <Border Grid.Row="1" Grid.Column="2"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                BorderThickness="2"
                BorderBrush="Black">
                <!--Scroll Viewer-->
                <ScrollViewer Name="scroller2" Grid.Row="1" VerticalContentAlignment="Stretch" 
                          MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}" 
                          VerticalScrollBarVisibility="Visible">
                    <networkUi:NetworkView Name="switchDiagram" Grid.Row="2" Grid.Column="2"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                    Background="#212667D7"
                             NodesSource="{Binding Network.Nodes}"
                            ConnectionsSource="{Binding Network.Connections}">
                    </networkUi:NetworkView>
                </ScrollViewer>
            </Border>
        </Grid>
    </Grid>

</Window>
